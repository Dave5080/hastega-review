{"ast":null,"code":"var _jsxFileName = \"/home/dave/src/hastega/review/frontend/src/BookOverview.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport NewBook from './NewBook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overview = ({\n  token\n}) => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [newBooks, setNewBooks] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/books?Authorization=\" + token, {\n      method: \"GET\",\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      for (const book in data) book[\"view\"] = true;\n      setBooks(data);\n    });\n  }, []);\n  function deleteBook(ISBN) {\n    fetch(\"http://localhost:8080/delete-book?Authorization=\" + token + \"&ISBN=\" + ISBN, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': token\n      }\n    }).then(() => {\n      setBooks(oldValues => {\n        return oldValues.filter(book => book.ISBN !== ISBN);\n      });\n    });\n  }\n  function editModeChange(ISBN) {\n    console.log(\"Changing edit mode\");\n    for (const element of books) {\n      if (element.ISBN == ISBN) {\n        element[\"viewMode\"] = !element[\"viewMode\"];\n      }\n    }\n    setBooks(prevUsers => [...prevUsers]);\n  }\n  function updateUser(ISBN, book) {\n    fetch(\"http://localhost:8080/delete-book?Authorization=\" + token + \"&ISBN=\" + ISBN, {\n      method: \"POST\",\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(book)\n    }).then(() => {\n      for (const element of books) if (element.ISBN == ISBN) {\n        for (const p in element) element[p] = book[p];\n        editModeChange(element.ISBN);\n        break;\n      }\n    });\n  }\n  function addNewBookInput() {\n    setNewBooks(newBooks => [...newBooks, {}]);\n  }\n  function deleteNewUser(ISBN) {\n    setNewBooks(oldValues => {\n      return oldValues.filter(book => book.ISBN !== ISBN);\n    });\n  }\n  function updateNewUser(newBook) {\n    setBooks([...books, newBook]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BookRow, {\n        book: book\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, book.ISBN, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)), newBooks.map(newBook => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NewBook, {\n        newBook: newBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNewBookInput(),\n        children: \"New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Overview, \"8YHo08/Pc1woRe4Re0qxssfPJyc=\");\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["useEffect","useState","NewBook","jsxDEV","_jsxDEV","Overview","token","_s","books","setBooks","newBooks","setNewBooks","fetch","method","headers","then","response","json","data","book","deleteBook","ISBN","oldValues","filter","editModeChange","console","log","element","prevUsers","updateUser","body","JSON","stringify","p","addNewBookInput","deleteNewUser","updateNewUser","newBook","className","children","map","BookRow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/dave/src/hastega/review/frontend/src/BookOverview.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport NewBook from './NewBook';\n\nconst Overview = ({ token }) => {\n\n    const [books, setBooks] = useState([]);\n    const [newBooks, setNewBooks] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8080/books?Authorization=\"+token, {\n            method: \"GET\",\n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/json'\n            }\n        }).then(response => response.json())\n            .then(data => {\n                for(const book in data) book[\"view\"] = true;\n                setBooks(data);\n            })\n    },[]);\n\n    function deleteBook(ISBN) {\n        fetch(\"http://localhost:8080/delete-book?Authorization=\"+token+\"&ISBN=\"+ISBN,{\n          method: \"DELETE\",\n          headers: {'Authorization': token}\n        }).then(() => {\n          setBooks((oldValues) => {\n            return oldValues.filter((book) => book.ISBN !== ISBN);\n          });\n        });\n      }\n    \n      function editModeChange(ISBN) {\n        console.log(\"Changing edit mode\");\n        for (const element of books) {\n          if (element.ISBN == ISBN) {\n            element[\"viewMode\"] = !element[\"viewMode\"];\n          }\n        }\n        setBooks((prevUsers) => [...prevUsers]);\n      }\n    \n      function updateUser(ISBN, book) {\n        fetch(\"http://localhost:8080/delete-book?Authorization=\"+token+\"&ISBN=\"+ISBN, {\n          method: \"POST\",\n          headers: {'Authorization': token, 'Content-Type': 'application/json'},\n          body: JSON.stringify(book),\n        }).then(() => {\n          for (const element of books)\n            if (element.ISBN == ISBN) {\n              for(const p in element)\n                element[p] = book[p];\n              editModeChange(element.ISBN);\n              break;\n            }\n        });\n      }\n    \n      function addNewBookInput() {\n        setNewBooks((newBooks) => [...newBooks, {}]);\n      }\n    \n      function deleteNewUser(ISBN) {\n        setNewBooks((oldValues) => {\n          return oldValues.filter((book) => book.ISBN !== ISBN);\n        });\n      }\n    \n      function updateNewUser(newBook) {\n        setBooks([...books, newBook]);\n      }\n\n    return (\n        <div className='container'>\n            {books.map((book) => (\n            <div key={book.ISBN}>\n                <BookRow book={book}/>\n            </div>\n            ))}\n        \n            {newBooks.map((newBook) => (\n            <div>\n                <NewBook newBook={newBook}/>\n            </div>\n            ))}\n            <div>\n                <button onClick={() => addNewBookInput()}>New User</button>\n            </div>\n        </div>\n    );\n}\nexport default Overview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}